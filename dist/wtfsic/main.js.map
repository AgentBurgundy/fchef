{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routes.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/recipe-view/recipe-view.component.css","webpack:///./src/app/components/recipe-view/recipe-view.component.html","webpack:///./src/app/components/recipe-view/recipe-view.component.ts","webpack:///./src/app/pages/main/main.component.css","webpack:///./src/app/pages/main/main.component.html","webpack:///./src/app/pages/main/main.component.ts","webpack:///./src/app/services/recipe.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Routes } from \"@angular/router\";\r\nimport { MainComponent } from \"./pages/main/main.component\";\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: 'home', component: MainComponent },\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n]","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'wtfsic';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { appRoutes } from './app-routes';\nimport { RecipeViewComponent } from './components/recipe-view/recipe-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    RecipeViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h5>You should fucking make...</h5>\\n<h3>{{ currentFuckingRecipe.title }}</h3>\\n\\n<form #queryForm=\\\"ngForm\\\" (ngSubmit)=\\\"search()\\\">\\n    <input type=\\\"text\\\" required name=\\\"query\\\" id=\\\"query\\\" [(ngModel)]=\\\"queryTerm\\\"/>\\n    <button type=\\\"submit\\\" [disabled]=\\\"!queryForm.form.valid\\\">Get Another Fucking Recipe</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../../services/recipe.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-view',\n  templateUrl: './recipe-view.component.html',\n  styleUrls: ['./recipe-view.component.css']\n})\nexport class RecipeViewComponent implements OnInit {\n\n  queryTerm: string = 'chicken';\n  currentFuckingRecipe: any = {\n    title: ''\n  };\n  fuckingOptions: any = {\n\n  };\n\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit() {    \n    this.search();\n  }\n\n  search() {\n    console.log('Getting info from server...');\n    \n    this.recipeService.getAuth().subscribe(auth => {\n      this.recipeService.getRandomRecipe(auth, this.queryTerm, this.fuckingOptions)\n        .subscribe(data => \n          {\n            this.currentFuckingRecipe = data;\n            console.log(`Received data - ${this.currentFuckingRecipe.id} ${this.currentFuckingRecipe.key}`);\n          });\n    });    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"d-flex flex-row align-content-center justify-content-center\\\">\\n  <h1>WTFSIC</h1>\\n</div>\\n<div class=\\\"d-flex flex-row align-content-center justify-content-center\\\">\\n  <h4>What the fuck should I cook?</h4>\\n</div>\\n<div class=\\\"d-flex flex-row align-content-center justify-content-center\\\">\\n  <app-recipe-view></app-recipe-view>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Headers, Response, URLSearchParams} from '@angular/http';\n\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Auth } from '../models/auth.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  host: string;\n\n  constructor(private http: HttpClient) {\n    if (environment.production) {\n      this.host = window.location.origin + '/api'\n    }\n    else {\n      this.host = 'http://localhost:8080/api'\n    }\n  }\n\n  public getAuth() {\n    return this.http.get<Auth>(this.host);\n  }\n\n  public getRandomRecipe(data: any, query: string, options: any): Observable<Object> {\n    return this.http.get('https://api.edamam.com/search', {\n      params: {\n        \"app_id\": data.id,\n        \"app_key\": data.key,\n        \"q\": query\n      }\n    }).pipe(map((res: Response) => {\n      return {\n        title: res[\"hits\"][Math.floor(Math.random() * Object.keys(res[\"hits\"]).length)][\"recipe\"][\"label\"]\n      }\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n  /// <reference types=\"node\" />"],"sourceRoot":""}